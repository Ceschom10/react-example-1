{"version":3,"sources":["components/NavBar.js","components/CourseItem.js","containers/MainList.js","containers/NewCourse.js","containers/About.js","components/Navigation/NotFound.js","components/Navigation/index.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","style","marginLeft","Button","component","RouterLink","to","CourseItem","course","useState","expanded","setExpanded","Card","CardHeader","avatar","Avatar","aria-label","action","IconButton","title","fields","subheader","moment","sys","createdAt","format","CardMedia","height","paddingTop","image","file","url","CardContent","gutterBottom","align","shortDescription","CardActions","size","href","target","onClick","aria-expanded","transform","Collapse","in","timeout","unmountOnExit","duration","paragraph","skillLevel","description","client","contentful","space","accessToken","MainList","courses","setCourses","searchString","setSearchString","fetchCourses","useCallback","getEntries","content_type","then","response","items","console","log","catch","err","error","useEffect","padding","TextField","paddingBottom","paddingLeft","paddingRight","placeholder","margin","onChange","e","value","InputProps","endAdornment","InputAdornment","Grid","container","spacing","map","item","xs","sm","lg","xl","key","slug","useStyles","makeStyles","theme","root","width","NewCourse","classes","className","noValidate","autoComplete","required","id","label","defaultValue","disabled","type","readOnly","InputLabelProps","shrink","helperText","About","NotFound","Container","Navigation","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.359f0a5b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\n\nconst NavBar = () => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\">\n        ReactJs / Material-UI / Contentful\n      </Typography>\n\n      <div style={{ marginLeft: 24 }}>\n        <Button color=\"inherit\" component={RouterLink} to=\"/\">\n          List\n        </Button>\n\n        <Button color=\"inherit\" component={RouterLink} to=\"/new/\">\n          Create\n        </Button>\n\n        <Button color=\"inherit\" component={RouterLink} to=\"/about/\">\n          About\n        </Button>\n      </div>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  CardHeader,\n  IconButton,\n  Avatar,\n  Collapse,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport moment from 'moment';\n\nconst CourseItem = ({ course }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div>\n      {course ? (\n        <Card>\n          <CardHeader\n            avatar={<Avatar aria-label=\"recipe\">IT</Avatar>}\n            action={(\n              <IconButton aria-label=\"settings\">\n                <MoreVertIcon />\n              </IconButton>\n            )}\n            title={course.fields.title}\n            subheader={moment(course.sys.createdAt).format('LLL')}\n          />\n\n          <CardMedia\n            style={{ height: 0, paddingTop: '56.25%' }}\n            image={course.fields.image.fields.file.url}\n            title={course.fields.title}\n          />\n\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {course.fields.title}\n            </Typography>\n            <Typography component=\"p\" align=\"justify\">\n              {course.fields.shortDescription}\n            </Typography>\n          </CardContent>\n\n          <CardActions>\n            <Button size=\"small\" color=\"secondary\" href={course.fields.url} target=\"_blank\">\n              Open course\n            </Button>\n            <IconButton\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n              style={{\n                transform: 'rotate(0deg)',\n                marginLeft: 'auto',\n                ...(expanded && { transform: 'rotate(180deg)' }),\n              }}\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardActions>\n\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\">\n                Details\n              </Typography>\n\n              <Typography variant=\"subtitle2\" gutterBottom>\n                {`Duration: ${course.fields.duration} min`}\n              </Typography>\n              <Typography variant=\"subtitle2\" gutterBottom paragraph>\n                {`Skill Level: ${course.fields.skillLevel}`}\n              </Typography>\n\n              <Typography component=\"p\" align=\"justify\">\n                {course.fields.description}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      ) : null}\n    </div>\n  );\n};\n\nCourseItem.propTypes = {\n  course: PropTypes.shape({\n    fields: PropTypes.shape({\n      title: PropTypes.string,\n      url: PropTypes.string,\n      description: PropTypes.string,\n    }),\n  }),\n};\n\nexport default CourseItem;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { TextField, Grid, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport * as contentful from 'contentful';\nimport CourseItem from '../components/CourseItem';\n\nconst SPACE_ID = 'srlpekq85luo';\nconst ACCESS_TOKEN = 'evMFF1eK--2PX6Qqrlq8glrKOurVH1pdvaI-FRgmufU';\n\nconst client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN,\n});\n\nconst MainList = () => {\n  const [courses, setCourses] = useState([]);\n  const [searchString, setSearchString] = useState('');\n\n  const fetchCourses = useCallback(() => {\n    client\n      .getEntries({\n        content_type: 'course',\n        'fields.title[match]': searchString,\n      })\n      .then(response => {\n        setCourses(response.items);\n        console.log(`%ccourses fetched using... \"${searchString}\":`, 'background: #ccc; color: #444;', response.items);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [searchString]);\n\n  const onChange = e => {\n    setSearchString(e.target.value || '');\n  };\n\n  useEffect(() => {\n    fetchCourses();\n  }, [searchString, fetchCourses]);\n\n  return (\n    <div style={{ padding: 40 }}>\n      <TextField\n        style={{ paddingTop: 24, paddingBottom: 24, paddingLeft: 0, paddingRight: 0 }}\n        placeholder=\"Search courses...\"\n        margin=\"normal\"\n        onChange={onChange}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Grid container spacing={10} style={{ paddingTop: 24, paddingBottom: 24, paddingLeft: 0, paddingRight: 0 }}>\n        {courses.map(course => (\n          <Grid item xs={12} sm={6} lg={4} xl={3} key={course.fields.slug}>\n            <CourseItem course={course} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MainList;\n","import React from 'react';\nimport { Grid, Typography, TextField, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: 15,\n      width: '40ch',\n    },\n  },\n}));\n\nconst NewCourse = () => {\n  const classes = useStyles();\n\n  return (\n    <div style={{ padding: 40 }}>\n      <Grid container spacing={10} style={{ paddingTop: 24, paddingBottom: 24, paddingLeft: 0, paddingRight: 0 }}>\n        <Grid item>\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n            New Entry\n          </Typography>\n\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Hello World\" />\n              <TextField disabled id=\"standard-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" />\n              <TextField\n                id=\"standard-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <TextField\n                id=\"standard-read-only-input\"\n                label=\"Read Only\"\n                defaultValue=\"Hello World\"\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                id=\"standard-number\"\n                label=\"Number\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField id=\"standard-search\" label=\"Search field\" type=\"search\" />\n              <TextField\n                id=\"standard-helperText\"\n                label=\"Helper text\"\n                defaultValue=\"Default Value\"\n                helperText=\"Some important text\"\n              />\n            </div>\n            <div>\n              <TextField required id=\"filled-required\" label=\"Required\" defaultValue=\"Hello World\" variant=\"filled\" />\n              <TextField disabled id=\"filled-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" variant=\"filled\" />\n              <TextField\n                id=\"filled-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-read-only-input\"\n                label=\"Read Only\"\n                defaultValue=\"Hello World\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-number\"\n                label=\"Number\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"filled\"\n              />\n              <TextField id=\"filled-search\" label=\"Search field\" type=\"search\" variant=\"filled\" />\n              <TextField\n                id=\"filled-helperText\"\n                label=\"Helper text\"\n                defaultValue=\"Default Value\"\n                helperText=\"Some important text\"\n                variant=\"filled\"\n              />\n            </div>\n            <div>\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Required\"\n                defaultValue=\"Hello World\"\n                variant=\"outlined\"\n              />\n              <TextField\n                disabled\n                id=\"outlined-disabled\"\n                label=\"Disabled\"\n                defaultValue=\"Hello World\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-read-only-input\"\n                label=\"Read Only\"\n                defaultValue=\"Hello World\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-number\"\n                label=\"Number\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n              <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" variant=\"outlined\" />\n              <TextField\n                id=\"outlined-helperText\"\n                label=\"Helper text\"\n                defaultValue=\"Default Value\"\n                helperText=\"Some important text\"\n                variant=\"outlined\"\n              />\n            </div>\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NewCourse;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst About = () => (\n  <div style={{ padding: 40 }}>\n    <Grid container spacing={10} style={{ paddingTop: 24, paddingBottom: 24, paddingLeft: 0, paddingRight: 0 }}>\n      <Grid item xs={12} sm={6} lg={4} xl={3}>\n        <Typography variant=\"h3\" color=\"secondary\" gutterBottom>\n          Tusa Inc.\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n          All rights reserved\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n          We are a company that makes ReactJs APPs for living\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\" gutterBottom>\n          But when the night arrives... We get out the forbidden dance moves.\n        </Typography>\n      </Grid>\n    </Grid>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { Grid, Typography, Container } from '@material-ui/core';\n\nconst NotFound = () => (\n  <div style={{ padding: 40 }}>\n    <Container>\n      <Grid container spacing={10} style={{ paddingTop: 24, paddingBottom: 24, paddingLeft: 0, paddingRight: 0 }}>\n        <Grid item xs={12} sm={6} lg={4} xl={12}>\n          <Typography variant=\"h1\" color=\"error\" align=\"center\" gutterBottom>\n            404\n          </Typography>\n          <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\" gutterBottom>\n            Content Not Found\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport MainList from '../../containers/MainList';\nimport NewCourse from '../../containers/NewCourse';\nimport About from '../../containers/About';\nimport NotFound from './NotFound';\n\nconst Navigation = () => (\n  <Switch>\n    <Route path=\"/\" component={MainList} exact />\n    <Route path=\"/home\" component={MainList} exact />\n    <Route path=\"/new\" component={NewCourse} exact />\n    <Route path=\"/about\" component={About} exact />\n    <Route component={NotFound} />\n    <Redirect to=\"/home/\" />\n  </Switch>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Navigation from './components/Navigation';\n\nconst App = () => (\n  <HashRouter>\n    <NavBar />\n    <Navigation />\n  </HashRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}